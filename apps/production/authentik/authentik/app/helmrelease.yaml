---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2025.2.1
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 10
  uninstall:
    keepHistory: false
  valuesFrom:
    - targetPath: postgresql.auth.password
      kind: Secret
      name: authentik-secret
      valuesKey: AUTHENTIK_POSTGRESQL__PASSWORD
    - targetPath: postgresql.auth.postgresPassword
      kind: Secret
      name: authentik-secret
      valuesKey: AUTHENTIK_POSTGRESQL_POSTGRES_PASSWORD
  values:
    global:
      envFrom:
        - secretRef:
            name: authentik-secret
    authentik:
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.beryju.org, and is fully opt-in
      error_reporting:
        enabled: true
      log_level: debug
      email:
        from: "Authentik <auth@${SECRET_DOMAIN}>"
        host: "smtp.sendgrid.net"
        port: "587"
        use_tls: true
        username: apikey

    server:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          hajimari.io/icon: simple-icons:lock
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host

      metrics:
        serviceMonitor:
          enabled: true

    postgresql:
      # diagnosticMode:
      #   enabled: true
      enabled: true
      image:
        debug: true
      primary:
        persistence:
          enabled: true
          storageClass: nfs-client
          existingClaim: "data-authentik-postgresql-0-authentik-database"
        containerSecurityContext:
          runAsUser: 1004
        volumePermissions:
          enabled: true

    redis:
      enabled: true
      master:
        persistence:
          enabled: true
          storageClass: nfs-client
        containerSecurityContext:
          runAsUser: 1004
        podSecurityContext:
          fsGroup: 1004

    prometheus:
      rules:
        enabled: true
    podSecurityContext:
      runAsUser: 1004
      runAsGroup: 1004
      fsGroup: 1004
