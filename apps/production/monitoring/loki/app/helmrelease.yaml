---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: loki
      version: 6.6.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    timeout: 30m
    remediation:
      retries: 10
  upgrade:
    cleanupOnFail: true
    timeout: 30m
    remediation:
      retries: 10
  uninstall:
    keepHistory: false
  values:
    loki:
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
        memberlist:
          join_members: ["loki-memberlist"]
        limits_config:
          retention_period: 14d
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
          split_queries_by_interval: 15m
          ingestion_rate_mb: 16
          ingestion_burst_size_mb: 32
          shard_streams:
            enabled: true
        schema_config:
          configs:
            - from: "2022-01-11"
              store: boltdb-shipper
              object_store: s3
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
        common:
          path_prefix: /var/loki
          replication_factor: 3
          storage:
            s3:
              s3: null
              insecure: true
              s3forcepathstyle: true
          ring:
            kvstore:
              store: memberlist
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          ring:
            kvstore:
              store: memberlist
        distributor:
          ring:
            kvstore:
              store: memberlist
        compactor:
          working_directory: /var/loki/boltdb-shipper-compactor
          shared_store: s3
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        ingester:
          max_chunk_age: 1h
          lifecycler:
            ring:
              kvstore:
                store: memberlist
        analytics:
          reporting_enabled: false
      podSecurityContext:
        runAsUser: 1004
    gateway:
      replicas: 3
      # TODO: https://github.com/grafana/loki/pull/8187
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hosts:
          - host: &host "loki.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
      podSecurityContext:
        runAsUser: 1004
    read:
      replicas: 3
      persistence:
        storageClass: nfs-client
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
    write:
      replicas: 3
      persistence:
        storageClass: nfs-client
    backend:
      replicas: 3
      persistence:
        storageClass: nfs-client

      extraVolumeMounts:
        - name: rules
          mountPath: /rules/fake
        - name: scratch
          mountPath: /tmp/scratch
      extraVolumes:
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: scratch
          emptyDir: {}
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      serviceMonitor:
        enabled: true
        additionalLabels:
          app.kubernetes.io/part-of: kube-prometheus-stack
        metricsInstance:
          enabled: true
      selfMonitoring:
        enabled: true
        grafanaAgent:
          installOperator: true
      lokiCanary:
        enabled: false
      rules:
        additionalGroups:
          - name: loki-rules
            rules:
              - record: job:loki_request_duration_seconds_bucket:sum_rate
                expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
              - record: job_route:loki_request_duration_seconds_bucket:sum_rate
                expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
              - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
                expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
    test:
      enabled: false
    promtail:
      enabled: true
  valuesFrom:
    - targetPath: loki.structuredConfig.common.storage.s3.bucketnames
      kind: ConfigMap
      name: loki-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: loki.structuredConfig.common.storage.s3.endpoint
      kind: ConfigMap
      name: loki-bucket-v1
      valuesKey: BUCKET_HOST
    - targetPath: loki.structuredConfig.common.storage.s3.access_key_id
      kind: Secret
      name: loki-bucket-v1
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: loki.structuredConfig.common.storage.s3.secret_access_key
      kind: Secret
      name: loki-bucket-v1
      valuesKey: AWS_SECRET_ACCESS_KEY
